# Can be set to your own hook builds
vOSIE=v0.8.0
OSIE_DOWNLOAD_URLS=https://github.com/tinkerbell/hook/releases/download/${vOSIE}/hook_x86_64.tar.gz,https://github.com/tinkerbell/hook/releases/download/${vOSIE}/hook_aarch64.tar.gz

# This is the IP and MAC of the machine to be provisioned
# The IP should normally be in the same network as the IP used for the provisioner
TINKERBELL_CLIENT_IP=192.168.56.43
TINKERBELL_CLIENT_MAC=08:00:27:9e:f5:3a

# These are the Gateway and DNS addresses the client should use, required for tink-worker to pull action images
TINKERBELL_CLIENT_GW=192.168.56.4
TINKERBELL_CLIENT_NAMESERVER_1=1.1.1.1
TINKERBELL_CLIENT_NAMESERVER_2=8.8.8.8

# This should be an IP that's on an interface where you will be provisioning machines
TINKERBELL_HOST_IP=192.168.1.11

# Images used by docker compose natively or in terraform/vagrant, update if necessary
BOOTS_IMAGE=quay.io/tinkerbell/boots:v0.7.0
HEGEL_IMAGE=quay.io/tinkerbell/hegel:v0.8.0
TINK_VERSION=v0.8.0
TINK_SERVER_IMAGE=quay.io/tinkerbell/tink:${TINK_VERSION}
TINK_CONTROLLER_IMAGE=quay.io/tinkerbell/tink-controller:${TINK_VERSION}
TINK_WORKER_IMAGE=quay.io/tinkerbell/tink-worker:${TINK_VERSION}
RUFIO_VERSION=v0.1.0
RUFIO_IMAGE=quay.io/tinkerbell/rufio:${RUFIO_VERSION}
K3S_IMAGE=rancher/k3s:v1.24.4-k3s1

# This is the boot/primary disk device and the device for its first partition 
# for the machine to be provisioned (as it would appear with lsblk)
DISK_DEVICE=/dev/sda
DISK_DEVICE_PARTITION_1=/dev/sda1
# Example for a device with an NVME SSD
#DISK_DEVICE=/dev/nvme0n1
#DISK_DEVICE_PARTITION_1=/dev/nvme0n1p1
